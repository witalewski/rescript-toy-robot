// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


function move(robot) {
  var match = robot.facing;
  switch (match) {
    case /* North */0 :
        return {
                north: robot.north + 1 | 0,
                east: robot.east,
                facing: robot.facing
              };
    case /* West */1 :
        return {
                north: robot.north,
                east: robot.east - 1 | 0,
                facing: robot.facing
              };
    case /* South */2 :
        return {
                north: robot.north - 1 | 0,
                east: robot.east,
                facing: robot.facing
              };
    case /* East */3 :
        return {
                north: robot.north,
                east: robot.east + 1 | 0,
                facing: robot.facing
              };
    
  }
}

function turnLeft(robot) {
  var match = robot.facing;
  switch (match) {
    case /* North */0 :
        return {
                north: robot.north,
                east: robot.east,
                facing: /* West */1
              };
    case /* West */1 :
        return {
                north: robot.north,
                east: robot.east,
                facing: /* South */2
              };
    case /* South */2 :
        return {
                north: robot.north,
                east: robot.east,
                facing: /* East */3
              };
    case /* East */3 :
        return {
                north: robot.north,
                east: robot.east,
                facing: /* North */0
              };
    
  }
}

function turnRight(robot) {
  var match = robot.facing;
  switch (match) {
    case /* North */0 :
        return {
                north: robot.north,
                east: robot.east,
                facing: /* East */3
              };
    case /* West */1 :
        return {
                north: robot.north,
                east: robot.east,
                facing: /* North */0
              };
    case /* South */2 :
        return {
                north: robot.north,
                east: robot.east,
                facing: /* West */1
              };
    case /* East */3 :
        return {
                north: robot.north,
                east: robot.east,
                facing: /* South */2
              };
    
  }
}

function parseFacing(facingString) {
  switch (facingString) {
    case "EAST" :
        return /* East */3;
    case "NORTH" :
        return /* North */0;
    case "SOUTH" :
        return /* South */2;
    case "WEST" :
        return /* West */1;
    default:
      return ;
  }
}

function toString(robot) {
  var match = robot.facing;
  var tmp;
  switch (match) {
    case /* North */0 :
        tmp = "NORTH";
        break;
    case /* West */1 :
        tmp = "WEST";
        break;
    case /* South */2 :
        tmp = "SOUTH";
        break;
    case /* East */3 :
        tmp = "EAST";
        break;
    
  }
  return String(robot.east) + "," + String(robot.north) + "," + tmp;
}

exports.move = move;
exports.turnLeft = turnLeft;
exports.turnRight = turnRight;
exports.parseFacing = parseFacing;
exports.toString = toString;
/* No side effect */
